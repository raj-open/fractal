# generated by datamodel-codegen:
#   filename:  peano-schema.yaml

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Extra, Field


class PlotSettingsAspect(BaseModel):
    """
    Attributes for a plot aspect.
    """

    class Config:
        extra = Extra.allow
        allow_population_by_field_name = True

    show: bool = False
    colour: Any = 'black'
    lw: int = 1


class EnumMatrixPlotOrientation(Enum):
    """
    An enumeration of possible options for the orientation of a plot of a matrix.
    """

    unchanged = 'UNCHANGED'
    rotate_left = 'ROTATE-LEFT'
    transposed = 'TRANSPOSED'
    flipped_rows = 'FLIPPED-ROWS'
    flipped_columns = 'FLIPPED-COLUMNS'


class PlotSettings(BaseModel):
    """
    Settings for plots.
    """

    class Config:
        extra = Extra.allow
        allow_population_by_field_name = True

    curve: PlotSettingsAspect
    fill: PlotSettingsAspect
    grid: PlotSettingsAspect
    frame: PlotSettingsAspect
    orientation: Optional[
        EnumMatrixPlotOrientation
    ] = EnumMatrixPlotOrientation.flipped_rows
    transparent: bool = True
    scale: Optional[List[float]] = Field(None, max_items=2, min_items=2)
    dpi: int = 1
    fps: int = 1
    mirror: bool = False
